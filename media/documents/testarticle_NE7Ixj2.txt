tructure that real coefficients are given to each vertex-edge incidence. The spectra, i.e.
the multiset of the eigenvalues, of such hypergraphs, are known to encode structural
information of the data. We show how these spectra can be used, in particular,
in order to give an estimation of cellular redundancy of the network. We analyze
some simulated and real data sets of gene expression for illustrating the new method
proposed here.
1 Introduction
Single-cell RNA-sequencing experiments are ubiquitous in cell biology, measuring the expression of each gene (number of mRNA molecules) in single cells [14]. The resulting data
are complex. Cells can form discrete clusters — cell types— or continuous relations —
lineage trajectories. Genes inter-regulate each other’s expression, forming non-linear gene
expression programmes [7, 27, 39]. We introduce a measure for directly quantifying cellular
complexity based on spectral hypergraph theory: an emerging field of mathematics that
has been recently applied to physics [2–4, 6, 8, 23], and that can be applied to biochemical
data analysis [15].
Graph theory forms a significant component of single-cell analysis (single-cell analysis
referring to the analysis of single-cell data, not of single cells), particularly in dimension
reduction and unsupervised clustering [5, 22, 38, 40]. By encoding data as graphs, the
properties of graphs become the properties of the data, gaining us access to many powerful
quantitative summaries of the data. But graphs can only partially represent single-cell
data (typically encoding cell-to-cell distances): hypergraphs, a generalization of graphs,
allow for a complete representation of the data. We therefore encode single-cell data as
hypergraphs, and we show how recent advances in spectral hypergraph theory enable us
to access the succinct structural properties of these data.
While the edges of a graph are pairwise connections between the vertices, with hypergraphs, links of any cardinality between the nodes are allowed. In other words, in
a hypergraph, edges are sets of nodes. Here we consider an even more general class of
hypergraphs, namely the hypergraphs with real coefficients that were introduced in [15],
in which real coefficients can be assigned to the vertex-edge incidences (Figure 1).
Given a data set of gene expression with N cells and M genes, we model it as a
hypergraph on N nodes and M edges in which each vertex i represents a cell, each edge
1
arXiv:2106.03663v1 [q-bio.MN] 7 Jun 2021
Figure 1: A hypergraph with real coefficients.
k represents a gene, and each coefficient c(i, k) represents the proportion of transcripts of
k assigned to i. We assume that the coefficients are normalized with respect to cells, so
that
X
k
c(i, k) = 1 for each cell i. (1)
Such cell-wise normalization is the norm in RNA-seq analysis (e.g. counts per million):
the number of counts per cell can vary by orders of magnitude solely due to technical
effects, distorting comparisons of absolute gene expression between cells [9, 17, 37].
We then consider the spectrum of the normalized Laplacian of the obtained hypergraph. As shown in [15], such spectrum is given by N real, non-negative eigenvalues, and
it encodes many important structural properties of the hypergraph, therefore also of the
data. If we denote by λN the largest eigenvalue, then the quantity
R :=
λN
N
estimates the cellular redundancy of the network, and it is an inverse measure of cellular
complexity. In fact, as we shall see in Section 2, we have that
1
N
≤ R ≤ 1,
and R = 1/N if and only if and only if each gene is concentrated in one single cell, that
is, we have no cellular redundancy at all. Moreover, we have that R = 1 (equivalently,
λN achieves its largest possible value N) if and only if each gene is distributed among all
cells and
c(i, k) = c(j, k)
for each gene k and for all cells i 6= j, i.e., we have cellular redundancy.
We illustrate the meaning of this redundancy with two toy examples that involve two
cells and two genes each. If genes are distributed among cells as in Table 1, we clearly
expect a high cellular redundancy and in fact, by the above consideration, R = 1, hence
R achieves its maximum possible value. Conversely, if genes are distributed among cells
as in Table 2, we then have low cellular redundancy and we therefore expect a small value
of R. As we shall see in details in Example 2.6 below, this is exactly the case.
Structure of the paper
In Section 2 we present the mathematical details of our model and we prove, in particular,
our main theoretical results. In order to illustrate the method, in Section 3 we analyze
2
Gene 1 Gene 2
Cell 1 0.3 0.7
Cell 2 0.3 0.7
Table 1: An example of gene expression with maximal cellular redundancy.
Gene 1 Gene 2
Cell 1 0.1 0.9
Cell 2 1 0
Table 2: An example of gene expression with low cellular redundancy.
simulated data and in Section 4 we analyze real data sets of gene expressions. Finally, in
Section 5 we discuss the methods and in Section 6 we draw some conclusions.
2 Theoretical results
We recall some definitions from [15] before proving our main theoretical results.
Definition 2.1. A hypergraph with real coefficients is a triple Γ = (V, E, C) such that:
• V = {1, . . . , N} is a finite set of nodes or vertices;
• E = {k1, . . . , kM} is a multiset of elements kl ∈ P(V ) \ ∅ called edges;
• C = {c(i, k) : i ∈ V and k ∈ E} is a set of coefficients c(i, k) ∈ R and it is such that
c(i, k) = 0 ⇐⇒ i /∈ k. (2)
From here on in this section we fix a hypergraph Γ = (V, E, C) on N nodes and M
edges. We assume that Γ has no isolated vertices, i.e., vertices that are not contained in
any edge.
Definition 2.2. Given k ∈ E, its cardinality is the number of vertices that are contained
in k. Given i ∈ V , its degree is
deg i := X
k∈E
c(i, k)
2
. (3)
The N × N diagonal degree matrix of Γ is
D := diag
deg i

i=1,...,N .
The N × N adjacency matrix of Γ is A := (Aij )ij , where Aii := 0 for all i = 1, . . . , N and
Aij := −
X
k∈E
c(i, k) · c(j, k) for all i 6= j.
The N × M incidence matrix of Γ is I := (Iil)il, where
Iil := c(i, kl).

Note that in our context, in both models that we are considering, each row of I
represents a cell and each column of I represents a gene.
Definition 2.3. The normalized Laplacian of Γ is the N × N matrix
L := Id − D−1A = D−1
II>.
The dual normalized Laplacian of Γ is the M × M matrix
L
∗
:= I
>D−1
I.
As shown in [15], L has N real, non-negative eigenvalues, denoted λ1 ≤ λ2 ≤ . . . ≤ λN
and called the spectrum of Γ, while L
∗ has M real, non-negative eigenvalues, counted with
multiplicity. The non-zero eigenvalues of L and L
∗
coincide, with the same multiplicity,
therefore, in particular, also the largest eigenvalue of L and L
∗
is the same. This allows
us to simplify the computations depending on the size of the data set: If M ≥ N (respectively, N ≥ M), it is convenient to compute the largest eigenvalues and, more generally,
the entire non-zero spectrum of Γ, using L (respectively, L
∗
).
We now prove a general result on the largest eigenvalue of Γ, before focusing on the
case when the coefficients are normalized as in (1).
Theorem 2.4. The largest eigenvalue of Γ is such that 1 ≤ λN ≤ N. Moreover, if all
coefficients are non-negative,
• λN = 1 if and only if each edge has cardinality 1;
• λN = N if and only if all edges have cardinality N and, for all vertices i 6= j and
edges k 6= h,
c(i, k)
c(j, k)
=
c(i, h)
c(j, h)
. (4)
Proof. As shown in [15, Corollary 3.2], PN
i=1 λi = N. Since λN is the largest eigenvalue,
this implies that 1 ≤ λN ≤ N, and λN = 1 if and only if λi = 1 for all i = 1, . . . , N.
Now, since L = Id − D−1A, 1 is the only eigenvalue of Γ if and only if A = 0. Since
all coefficients are non-negative, this happens if and only if two distinct vertices are not
contained in common edges, which can be reformulated by saying that each edge has
cardinality 1. This proves the first claim.
Now, by Theorem 6.3 in [15], since in our case the coefficients are non-negative, λN = N
if and only if all edges have cardinality N and there exists a function f : V → R such that
g(k) := c(i, k)f(i)
does not depend on i, for all edges k and for all vertices i. This is equivalent to saying
that
c(i, k)f(i) = c(j, k)f(j)
for all i 6= j, or equivalently
f(j) = c(i, k)
c(j, k)
f(i).
Such f exists if and only if, for all i 6= j, c(i, k)/c(j, k) does not depend on k, that is,
c(i, k)
c(j, k)
=
c(i, h)
c(j, h)
for all k 6= h and for all i 6= j.
4
We now consider the case when the coefficients satisfy the normalization in (1).
Corollary 2.5. If the coefficients satisfy (1), then the largest eigenvalue is such that
1 ≤ λN ≤ N and, moreover,
• λN = 1 if and only if each edge has cardinality 1;
• λN = N if and only if all edges have cardinality N and, for each edge k and for all
vertices i 6= j,
c(i, k) = c(j, k). (5)
Proof. By Theorem 2.4 it is enough to prove that, if the coefficients satisfy (1), then (4)
is equivalent to (5). Clearly, (5) implies (4). Vice versa, (4) together with (1) implies that
1 = X
h
c(i, h) = X
h
c(j, h)
!
·
c(i, k)
c(j, k)
=
c(i, k)
c(j, k)
.
Hence, c(i, k) = c(j, k) for each edge k and for all vertices i 6= j.
In our context of networks of genetic expression, we can interpret Corollary 2.5 as
follows. The largest eigenvalue λN achieves its smallest possible value 1 if and only if each
gene is concentrated in one single cell. Moreover, if the coefficients satisfy the normalization in (1), then λN = N if and only if each gene is uniformly distributed among all
cells or, equivalently, we have cellular redundancy. In general, the bigger λN is, the more
cellular redundancy there is. We choose to consider the normalized quantity R = λN /N
as a measure of redundancy, so that is independent of the number of cells.
We conclude this section by discussing the example from the Introduction.
Example 2.6. In the example shown by Table (2),
I =

0.1 0.9
1 0 
and D =

0.82 0
0 1
.
The normalized Laplacian L = D−1II> has eigenvalues
λ1 ∼ 0.89 and λ2 ∼ 1.11.
Hence, while for a general hypergraph on 2 nodes the redundancy R = λ2/2 is such that
0.5 ≤ R ≤ 1, in this case we have R ∼ 0.55, i.e., there is a very low cellular redundancy,
as expected.
3 Simulations
We first demonstrate our hypergraph approach on simulated data. Single-cell RNAsequencing is a counting process, measuring the number of transcripts expressed by each
gene in each cell; accordingly, we simulate each gene as a Poisson process [28]. In practice, single-cell sequencing counts are over-dispersed compared with the Poisson, with
additional variability arising from biological heterogeneity. However, for the simulation,
we assume there is no excess biological variability, so parameterize each gene by a single
mean parameter, µ [28, 34, 37]. We randomly generate µ for each gene by sampling from
a gamma distribution (rate = 0.3; shape = 0.6) [41].
5
We repeatedly simulate 1800 genes over a population of 300 cells (following the median
ratio of genes to cells found in the real data sets shown later). Any differences between
cells arise solely from stochastic variation in sampling, so we expect cells to be highly
redundant: over the course of 100 simulations, we find a mean cellular redundancy of
0.842 (see Table 3).
Data R
Simulated (C = 1) 0.842
Simulated (C = 2) 0.447
Simulated (C = 3) 0.316
Table 3: Cellular redundancy of simulations.
The principal biological source of heterogeneity in gene expression is a multiplicity of
distinct cell types. Different cells types express distinct sets of genes (known as differential
gene expression), introducing multimodality in the observed count distributions [30].
We recreate the effect of cell types in silico by splitting cells into C discrete subpopulations. Each subpopulation is defined by a tranche of highly-expressed genes (of size
1800/C, rate = 0.3; shape = 0.6); the highly-expressing tranches of genes do not overlap
between differing subpopulations, and genes not included in the high-expression tranche
have on average 10x less expression (of size 1800- 1800/C, rate = 3; shape = 0.6).
Visualizing C = 3 via principal component analysis (projection of high dimensional
data set onto two dimensions, maximizing the variance retained), we observe that the
subpopulations are clearly defined, with no overlap; moreover, the heterogeneity within
each subpopulation is far less than the heterogeneity between subpopulations [12]. We,
therefore, expect a sharp decline in cellular redundancy with the increasing number of
differentially expressing subpopulations.
Simulating each C ∈ {1, 2, 3} 100 times, we find a strong, significant negative correlation between the number of clusters and cellular redundancy (Spearman’s rho = -0.94,
p-value < 2.2e-16, two-sided, N = 100): for the simulated data, cellular redundancy captures the increase in population complexity.
PC 1
PC 2
Figure 2: Simulation of three distinct clusters. Cells are projected onto the first two
dimensions of a principal components analysis of genes.
6
4 Analysis of real data sets
We further demonstrate our hypergraph approach on three real data sets: 1) Svensson,
a technical control data set (4,000 cells-equivalents, 24,116 gene-equivalents); 2) Tian, a
mixture of three cancerous cell lines, representing a simple, discrete cluster structure (902
cells, 16,468 genes), and 3) Stumpf, a sampling from mouse bone marrow, representing a
complex, continuous cluster structure (5,504 cells, 16,519 genes) [33, 35, 36].
Data R
Svensson 0.953
Tian 0.825
Stumpf 0.398
Table 4: Cellular redundancy of technical (Svensson) and biological data.
The technical control data set has been generated from a mixed solution of RNA
(specifically endogenous RNA from human brain and External RNA Control Consortium
spike-ins): variation between the cell-equivalents (the ‘cells’ are not strictly cells, rather
technical equivalents) arises solely from technical measurement effects [34]. The data
consists of two experimental batches, each of which forms a distinct cluster of cells in the
first two principal components, albeit with some overlap (Figure 3a).
Tian separates into three clear clusters in the first two principal components (Figure
3b). Unlike with the simulated data, not all genes will be involved in the demarcation of
cellular groupings — there will be substantially more overlap in gene expression between
cells and so greater cellular redundancy. Moreover, even among those genes that define
clusters, they may define multiple clusters or not be as differentially expressed (10-fold
difference) as in the simulated data: we expect real data to display higher levels of cellular
redundancy than the corresponding simulations.
This overlap in gene expression is emphasized in the Stumpf data set: cell types clusters
are not discrete; instead, they form part of continuous cell differentiation trajectories
PC 1
PC 2
UMAP 1
UMAP 2
PC 1
PC 2
a b c
Figure 3: Simulation of three data sets: a) Svensson, b) Tian, and c) Stumpf. In each, cells
are colored by cell type (recovered from data metadata) except for c) which is colored by
experimental batch. a) and b) project cells onto principal components, and c) onto UMAP
dimensions (Uniform Manifold Approximation and Projection), a nonlinear dimension
reduction technique [22].
7
Erythroblasts
Myeloblasts
Pro−B
Monocytes
BasophilsPericytes
Pre−B
Megakaryocytes
T−NK
Endothelial Cells
HSPCs
Monoblasts
Neutrophils
Myelocytes
0.3
0.65
1
R
Figure 4: Cellular redundancy by cell type for Stumpf data set.
(Figure 3c). Thus, despite having substantially more clusters than any other data set, we
expect the decline in redundancy to be muted by the continuous nature of the clusters.
We find that both Svensson and Tian have high levels of cellular redundancy. Tian in
particular has a cellular redundancy on par with our simulation of a single subpopulation:
overlap in gene expression substantially increases cellular redundancy. Moreover, Stumpf
has a cellular redundancy midway between the simulation of two or three subpopulations:
continuous cellular identity increases the measure cellular redundancy.
Calculating the cellular redundancy of each cell type within the Stumpf data set, we
find that most types share a similar level of redundancy, with the notable exceptions of
the Pro-B, Pre-B and T-NK (Natural Killer) cell types, and the Neutrophil and Myelocyte
cell types (Figure 4). Both sets of cell types form coherent developmental lineages, the
lymphocyte and neutrophil lineages respectively [33]. Given the consistency otherwise
of cell type’s cellular redundancy, we suggest that redundancy may detect over-/underclustering of cells: the lymphocyte-lineage ‘cell types’ may capture a broader continuum
of cellular development, so have reduced redundancy; conversely, the neutrophile-lineage
‘cell types’ may represent cell sub-types, with greater cellular redundancy.
5 Methods
5.1 Simulation
We simulated each gene as a Poisson process, with µ randomly generated from a gamma
distribution. We used a pair of gamma distributions: one with a rate of 0.3 for highlyexpressed genes and one with a rate of 3 for lowly-expressed genes; both parametrizations
used a shape parameter of 0.6.
For each simulation, we simulated a total of 300 cells and 1800 genes. For C of 1, i.e.,
one subpopulation, all genes for all cells were highly expressing; for C of 2 or 3, half or a
third of genes were highly expressed for half or a third of genes, respectively.
We calculated the mean redundancies for 100 repeats of each simulation. Spearman’s
rho who was calculated using the R function cor.test.
We used the R package Seurat for principle component analyses and UMAP visualizations [32]. Code for simulations and calculation of redundancy measures is available on
8
GitHub (https://github.com/mjcasy/scHyperGraph).
5.2 Technical and Biological Data collection
The Svensson data was downloaded as file “svensson chromium control.h5a” from https:
//data.caltech.edu/records/1264
The Tian data was downloaded as file “sincell with class.RDat” from https://github.
com/LuyiTian/sc_mixology
The Stumpf data was downloaded as file “RData.zip” from https://data.mendeley.com/
datasets/csvm3kpkxd/1?fbclid=IwAR3j_hvq5Zt0cdxBBM72Fqr8zXwVC6XRpkY2JtVwbcj1gzyNLM